version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dam_postgres
    environment:
      POSTGRES_USER: dam_user
      POSTGRES_PASSWORD: dam_password
      POSTGRES_DB: dam_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dam_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dam_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for BullMQ
  redis:
    image: redis:7-alpine
    container_name: dam_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dam_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: dam_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"      # API
      - "9001:9001"      # Console
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - dam_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client - Create buckets on startup
  minio_setup:
    image: minio/mc:latest
    container_name: dam_minio_setup
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - dam_network
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      mc mb myminio/originals --ignore-existing;
      mc mb myminio/thumbnails --ignore-existing;
      mc mb myminio/transcoded --ignore-existing;
      mc anonymous set download myminio/thumbnails;
      echo 'Buckets created successfully';
      "

  # BullMQ Board - Queue monitoring dashboard
  bullmq_board:
    image: deadly0/bull-board:latest
    container_name: dam_bullmq_board
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      BULL_PREFIX: bull
    ports:
      - "3001:3000"
    depends_on:
      - redis
    networks:
      - dam_network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  dam_network:
    driver: bridge