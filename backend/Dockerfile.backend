# Stage 1: Build stage
FROM node:20-alpine AS build

# Install build dependencies (like TypeScript, etc.)
RUN apk add --no-cache \
    python3 \
    make \
    g++

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install production and development dependencies
RUN npm ci --only=production && \
    npm cache clean --force

# Copy application code
COPY . .

# Build TypeScript
RUN npm install -g typescript && npm run build

# Stage 2: Production stage
FROM node:20-alpine

# Install only necessary runtime dependencies (FFmpeg in this case)
RUN apk add --no-cache ffmpeg

WORKDIR /app

# Copy only the built files from the previous stage
COPY --from=build /app/dist /app/dist
COPY --from=build /app/package*.json /app/

# Install only production dependencies
RUN npm ci --only=production && npm prune --production && \
    npm cache clean --force

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"

# Start application
CMD ["npm", "start"]
